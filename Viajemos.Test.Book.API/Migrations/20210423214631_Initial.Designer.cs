// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Viajemos.Test.Book.Infraestructure;

namespace Viajemos.Test.Book.API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210423214631_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Viajemos.Test.Book.Domain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.AuthorHasBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("Autores_Id");

                    b.Property<int>("BookISBN")
                        .HasColumnType("int")
                        .HasColumnName("Libros_ISBN");

                    b.HasKey("AuthorId", "BookISBN");

                    b.HasIndex("BookISBN");

                    b.ToTable("AuthorHasBook");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.Book", b =>
                {
                    b.Property<int>("ISBN")
                        .HasMaxLength(13)
                        .HasColumnType("int");

                    b.Property<int>("EditorialId")
                        .HasMaxLength(13)
                        .HasColumnType("int")
                        .HasColumnName("editoriales_id");

                    b.Property<string>("NumberPages")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("n_paginas");

                    b.Property<string>("Sypnosis")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("sinopsis");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("titulo");

                    b.HasKey("ISBN");

                    b.HasIndex("EditorialId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("Sede");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Editorials");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.AuthorHasBook", b =>
                {
                    b.HasOne("Viajemos.Test.Book.Domain.Author", "Author")
                        .WithMany("AuthorsHasBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viajemos.Test.Book.Domain.Book", "Book")
                        .WithMany("AuthorsHasBooks")
                        .HasForeignKey("BookISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.Book", b =>
                {
                    b.HasOne("Viajemos.Test.Book.Domain.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("EditorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.Author", b =>
                {
                    b.Navigation("AuthorsHasBooks");
                });

            modelBuilder.Entity("Viajemos.Test.Book.Domain.Book", b =>
                {
                    b.Navigation("AuthorsHasBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
